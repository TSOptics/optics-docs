"use strict";(self.webpackChunkreact_optics_docs=self.webpackChunkreact_optics_docs||[]).push([[6491],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,f=d["".concat(i,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(f,s(s({ref:t},u),{},{components:r})):n.createElement(f,s({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},658:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),s=["components"],c={title:".values()",sidebar_position:10},i=".values(): Optic",l={unversionedId:"API/methods/values()",id:"API/methods/values()",title:".values()",description:"---",source:"@site/docs/API/methods/values().md",sourceDirName:"API/methods",slug:"/API/methods/values()",permalink:"/react-optics-docs/docs/API/methods/values()",draft:!1,editUrl:"https://github.com/TSOptics/react-optics-docs/edit/master/docs/API/methods/values().md",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:".values()",sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:".entries()",permalink:"/react-optics-docs/docs/API/methods/entries()"},next:{title:".findFirst()",permalink:"/react-optics-docs/docs/API/methods/findFirst()"}},u={},p=[{value:"Example:",id:"example",level:3}],d={toc:p};function m(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"values-optic"},".values(): Optic"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"Optic<A extends Record<string, infer Value>>.values: () => Optic<Value, mapped>;\n")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Analogous to ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/values"},"Object.values"),", this method returns a ",(0,o.kt)("a",{parentName:"p",href:"../../guides/mapped%20optics()"},"mapped optic")," focused on the object's values."),(0,o.kt)("h3",{id:"example"},"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const onCapitals = createStore<Record<string, string>>({\n    France: 'paris',\n    Italy: 'roma',\n    Australia: 'canberra'\n});\n\nconst onValues = onCapitals.values();\n// onValues: Optic<string, mapped>\n\nconst [values, setValue] = useOptic(onValues);\n// values = ['paris', 'roma', 'canberra'];\n\nsetValue((prev) => prev[0].toUpperCase() + s.slice[1]);\n// values = ['Paris', 'Roma', 'Canberra'];\n// onCapitals.getState() = { France: 'Paris', Italy: 'Roma', Australia: 'Canberra' };\n")))}m.isMDXComponent=!0}}]);