"use strict";(self.webpackChunkreact_optics_docs=self.webpackChunkreact_optics_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Introduction","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Motivation","href":"/docs/Introduction/motivation","docId":"Introduction/motivation"},{"type":"link","label":"Getting Started","href":"/docs/Introduction/getting-started","docId":"Introduction/getting-started"},{"type":"link","label":"Core Concepts","href":"/docs/Introduction/core-concepts","docId":"Introduction/core-concepts"}]},{"type":"category","label":"Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Total vs partial","href":"/docs/Guides/total_partial","docId":"Guides/total_partial"},{"type":"link","label":"map/reduce","href":"/docs/Guides/map_reduce","docId":"Guides/map_reduce"},{"type":"link","label":"Comparisons","href":"/docs/Guides/comparisons","docId":"Guides/comparisons"},{"type":"link","label":"forms","href":"/docs/Guides/forms","docId":"Guides/forms"},{"type":"link","label":"PureOptic","href":"/docs/Guides/pure_optic","docId":"Guides/pure_optic"},{"type":"link","label":"Testing","href":"/docs/Guides/testing","docId":"Guides/testing"},{"type":"link","label":"TypeScript","href":"/docs/Guides/typescript","docId":"Guides/typescript"}]},{"type":"category","label":"API","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"createState()","href":"/docs/API/createState()","docId":"API/createState()"},{"type":"category","label":"React","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"useOptic()","href":"/docs/API/React/useOptic()","docId":"API/React/useOptic()"},{"type":"link","label":"useOpticReducer()","href":"/docs/API/React/useOpticReducer()","docId":"API/React/useOpticReducer()"},{"type":"link","label":"useKeyedOptics()","href":"/docs/API/React/useKeyedOptics()","docId":"API/React/useKeyedOptics()"}]},{"type":"category","label":"methods","collapsible":true,"collapsed":false,"items":[{"type":"link","label":".focusWithDefault()","href":"/docs/API/methods/focusWithDefault()","docId":"API/methods/focusWithDefault()"},{"type":"link","label":".focusMany()","href":"/docs/API/methods/focusMany()","docId":"API/methods/focusMany()"},{"type":"link","label":".convert()","href":"/docs/API/methods/convert()","docId":"API/methods/convert()"},{"type":"link","label":".compose()","href":"/docs/API/methods/compose()","docId":"API/methods/compose()"},{"type":"link","label":".refine()","href":"/docs/API/methods/refine()","docId":"API/methods/refine()"},{"type":"link","label":".if()","href":"/docs/API/methods/if()","docId":"API/methods/if()"},{"type":"link","label":".map()","href":"/docs/API/methods/map()","docId":"API/methods/map()"},{"type":"link","label":".entries()","href":"/docs/API/methods/entries()","docId":"API/methods/entries()"},{"type":"link","label":".values()","href":"/docs/API/methods/values()","docId":"API/methods/values()"},{"type":"link","label":".findFirst()","href":"/docs/API/methods/findFirst()","docId":"API/methods/findFirst()"},{"type":"link","label":".atIndex()","href":"/docs/API/methods/atIndex()","docId":"API/methods/atIndex()"},{"type":"link","label":".filter()","href":"/docs/API/methods/filter()","docId":"API/methods/filter()"},{"type":"link","label":".slice()","href":"/docs/API/methods/slice()","docId":"API/methods/slice()"},{"type":"link","label":".sort()","href":"/docs/API/methods/sort()","docId":"API/methods/sort()"},{"type":"link","label":".get()","href":"/docs/API/methods/get()","docId":"API/methods/get()"},{"type":"link","label":".set()","href":"/docs/API/methods/set()","docId":"API/methods/set()"},{"type":"link","label":"max()","href":"/docs/API/methods/max()","docId":"API/methods/max()"},{"type":"link","label":"min()","href":"/docs/API/methods/min()","docId":"API/methods/min()"}]}]}]},"docs":{"API/createState()":{"id":"API/createState()","title":"createState()","description":"Creates a global state initialized to the value passed as argument.","sidebar":"tutorialSidebar"},"API/methods/atIndex()":{"id":"API/methods/atIndex()","title":".atIndex()","description":"---","sidebar":"tutorialSidebar"},"API/methods/compose()":{"id":"API/methods/compose()","title":".compose()","description":"---","sidebar":"tutorialSidebar"},"API/methods/convert()":{"id":"API/methods/convert()","title":".convert()","description":"---","sidebar":"tutorialSidebar"},"API/methods/entries()":{"id":"API/methods/entries()","title":".entries()","description":"---","sidebar":"tutorialSidebar"},"API/methods/filter()":{"id":"API/methods/filter()","title":".filter()","description":"Analogous to Array.filter, this method returns a mapped optic focused on the elements of the original mapped optic that satisfy the predicate.","sidebar":"tutorialSidebar"},"API/methods/findFirst()":{"id":"API/methods/findFirst()","title":".findFirst()","description":"---","sidebar":"tutorialSidebar"},"API/methods/focusMany()":{"id":"API/methods/focusMany()","title":".focusMany()","description":"---","sidebar":"tutorialSidebar"},"API/methods/focusWithDefault()":{"id":"API/methods/focusWithDefault()","title":".focusWithDefault()","description":"---","sidebar":"tutorialSidebar"},"API/methods/get()":{"id":"API/methods/get()","title":".get()","description":"---","sidebar":"tutorialSidebar"},"API/methods/if()":{"id":"API/methods/if()","title":".if()","description":"---","sidebar":"tutorialSidebar"},"API/methods/map()":{"id":"API/methods/map()","title":".map()","description":"---","sidebar":"tutorialSidebar"},"API/methods/max()":{"id":"API/methods/max()","title":"max()","description":"WIP","sidebar":"tutorialSidebar"},"API/methods/min()":{"id":"API/methods/min()","title":"min()","description":"WIP","sidebar":"tutorialSidebar"},"API/methods/refine()":{"id":"API/methods/refine()","title":".refine()","description":"---","sidebar":"tutorialSidebar"},"API/methods/set()":{"id":"API/methods/set()","title":".set()","description":"---","sidebar":"tutorialSidebar"},"API/methods/slice()":{"id":"API/methods/slice()","title":".slice()","description":"---","sidebar":"tutorialSidebar"},"API/methods/sort()":{"id":"API/methods/sort()","title":".sort()","description":"---","sidebar":"tutorialSidebar"},"API/methods/values()":{"id":"API/methods/values()","title":".values()","description":"---","sidebar":"tutorialSidebar"},"API/React/useKeyedOptics()":{"id":"API/React/useKeyedOptics()","title":"useKeyedOptics()","description":"---","sidebar":"tutorialSidebar"},"API/React/useOptic()":{"id":"API/React/useOptic()","title":"useOptic()","description":"---","sidebar":"tutorialSidebar"},"API/React/useOpticReducer()":{"id":"API/React/useOpticReducer()","title":"useOpticReducer()","description":"---","sidebar":"tutorialSidebar"},"Guides/comparisons":{"id":"Guides/comparisons","title":"Comparisons","description":"WIP","sidebar":"tutorialSidebar"},"Guides/forms":{"id":"Guides/forms","title":"forms","description":"WIP","sidebar":"tutorialSidebar"},"Guides/map_reduce":{"id":"Guides/map_reduce","title":"map/reduce","description":"Besides total and partial an optic can be of a third type: mapped.","sidebar":"tutorialSidebar"},"Guides/pure_optic":{"id":"Guides/pure_optic","title":"PureOptic","description":"A PureOptic is an optic that is not linked to a store. You can\'t pass it to useOptic().","sidebar":"tutorialSidebar"},"Guides/testing":{"id":"Guides/testing","title":"Testing","description":"WIP","sidebar":"tutorialSidebar"},"Guides/total_partial":{"id":"Guides/total_partial","title":"Total vs partial","description":"Optics can either be total or partial:","sidebar":"tutorialSidebar"},"Guides/typescript":{"id":"Guides/typescript","title":"TypeScript","description":"WIP","sidebar":"tutorialSidebar"},"Introduction/core-concepts":{"id":"Introduction/core-concepts","title":"Core Concepts","description":"As explained in the previous section it is useful to think of optics as references.","sidebar":"tutorialSidebar"},"Introduction/getting-started":{"id":"Introduction/getting-started","title":"Getting Started","description":"Optics is a library to manage global immutable state in TypeScript applications.","sidebar":"tutorialSidebar"},"Introduction/motivation":{"id":"Introduction/motivation","title":"Motivation","description":"The use of immutable state in web applications has grown in popularity in recent years in a large part due to the fact that immutability helps us track changes in our application\u2019s state, a trait that is used by React (among others) in its rendering strategy.","sidebar":"tutorialSidebar"}}}')}}]);