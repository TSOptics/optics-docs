"use strict";(self.webpackChunkreact_optics_docs=self.webpackChunkreact_optics_docs||[]).push([[2069],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(r),d=o,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7712:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={title:".get()"},i=".get(Root): Value",c={unversionedId:"API/methods/get()",id:"API/methods/get()",title:".get()",description:"This method returns the value focused by a BaseOptic from a root object.",source:"@site/docs/API/methods/get().md",sourceDirName:"API/methods",slug:"/API/methods/get()",permalink:"/docs/API/methods/get()",draft:!1,editUrl:"https://github.com/TSOptics/react-optics-docs/edit/master/docs/API/methods/get().md",tags:[],version:"current",frontMatter:{title:".get()"},sidebar:"tutorialSidebar",previous:{title:".setState()",permalink:"/docs/API/methods/setState()"},next:{title:".set()",permalink:"/docs/API/methods/set()"}},s={},p=[{value:"Example",id:"example",level:3}],l={toc:p};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getroot-value"},".get(Root): Value"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"BaseOptic<A, total, S>.get: (root: S) => A;\nBaseOptic<A, partial, S>.get: (root: S) => A | undefined;\nBaseOptic<A, mapped, S>.get: (root: S) => A[];\n")),(0,o.kt)("p",null,"This method returns the value focused by a BaseOptic from a root object.",(0,o.kt)("br",{parentName:"p"}),"\n","A ",(0,o.kt)("a",{parentName:"p",href:"../../guide/BaseOptic"},(0,o.kt)("inlineCode",{parentName:"a"},"BaseOptic"))," doesn't have a root, unlike optics originating from ",(0,o.kt)("inlineCode",{parentName:"p"},"createStore"),", so we need to manually specify the root to retrieve the focused value and that's what ",(0,o.kt)("inlineCode",{parentName:"p"},"get")," allows us to do."),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"type User = {\n    name: string;\n    age: number;\n    verified: boolean;\n};\nconst onName = optic<User>().focus('name');\n\nconst user: User = { name: 'L\xe9on', age: 23, verified: false };\n\nconst name = onName.get(user);\n// name = 'L\xe9on'\n")))}u.isMDXComponent=!0}}]);