"use strict";(self.webpackChunkreact_optics_docs=self.webpackChunkreact_optics_docs||[]).push([[2241],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,u=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,m=d["".concat(u,".").concat(f)]||d[f]||l[f]||c;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,i=new Array(c);i[0]=d;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var s=2;s<c;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2729:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return l}});var r=n(7462),o=n(3366),c=(n(7294),n(3905)),i=["components"],a={sidebar_position:2,title:"useOptic()"},u="useOptic(optic): [value, setValue]",s={unversionedId:"API/hooks/useOptic()",id:"API/hooks/useOptic()",title:"useOptic()",description:"---",source:"@site/docs/API/hooks/useOptic().md",sourceDirName:"API/hooks",slug:"/API/hooks/useOptic()",permalink:"/react-optics-docs/docs/API/hooks/useOptic()",draft:!1,editUrl:"https://github.com/TSOptics/react-optics-docs/edit/master/docs/API/hooks/useOptic().md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"useOptic()"},sidebar:"tutorialSidebar",previous:{title:"createStore()",permalink:"/react-optics-docs/docs/API/createStore()"},next:{title:"useOpticReducer()",permalink:"/react-optics-docs/docs/API/hooks/useOpticReducer()"}},p={},l=[{value:"Example:",id:"example",level:3}],d={toc:l};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"useopticoptic-value-setvalue"},"useOptic(optic): ","[value, setValue]"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"function useOptic<T>(optic: Optic<T>): [T, Dispatch<SetStateAction<T>>];\n")),(0,c.kt)("hr",null),(0,c.kt)("p",null,"This hook let's you read and modify the slice of store focused by an optic.",(0,c.kt)("br",{parentName:"p"}),"\n","Just like React ",(0,c.kt)("inlineCode",{parentName:"p"},"useState")," it returns the value and a setter to change it."),(0,c.kt)("p",null,"The component will rerender each time the focused value changes."),(0,c.kt)("h3",{id:"example"},"Example:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useOptic } from 'react-optics';\n\nconst onCount = createStore(42);\n\nconst MyCount = () => {\n    const [count, setCount] = useOptic(onCount);\n\n    // set new count value\n    setCount(100);\n\n    // pass an updater function to change count based on the previous value\n    setCount((prev) => prev + 1);\n\n    return <div>count: {count}</div>;\n};\n")))}f.isMDXComponent=!0}}]);