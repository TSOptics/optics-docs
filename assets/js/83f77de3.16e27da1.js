"use strict";(self.webpackChunkreact_optics_docs=self.webpackChunkreact_optics_docs||[]).push([[4811],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||c;return n?r.createElement(f,s(s({ref:t},l),{},{components:n})):r.createElement(f,s({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,s=new Array(c);s[0]=m;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var p=2;p<c;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3467:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return u}});var r=n(7462),o=n(3366),c=(n(7294),n(3905)),s=["components"],a={title:".compose()",sidebar_position:5},i=".compose(baseOptic): Optic",p={unversionedId:"API/methods/compose()",id:"API/methods/compose()",title:".compose()",description:"---",source:"@site/docs/API/methods/compose().md",sourceDirName:"API/methods",slug:"/API/methods/compose()",permalink:"/react-optics-docs/docs/API/methods/compose()",draft:!1,editUrl:"https://github.com/TSOptics/react-optics-docs/edit/master/docs/API/methods/compose().md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:".compose()",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:".convert()",permalink:"/react-optics-docs/docs/API/methods/convert()"},next:{title:".refine()",permalink:"/react-optics-docs/docs/API/methods/refine()"}},l={},u=[{value:"Example:",id:"example",level:3}],m={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,s);return(0,c.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"composebaseoptic-optic"},".compose(baseOptic): Optic"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"Optic<B, _, A>.compose: <C>(baseOptic: BaseOptic<C, _, B>) => Optic<C, _, A>;\n")),(0,c.kt)("hr",null),(0,c.kt)("p",null,"On an optic on B from A, the compose method takes a base optic on C from B and returns a new optic on C from A."),(0,c.kt)("h3",{id:"example"},"Example:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"type Person = {\n    contact: {\n        phone: string;\n        address: {\n            line1: string;\n        };\n    };\n};\nconst onState = createStore<{ buyer: Person; seller: Person }>();\n\nconst onBuyer = onState.focus('buyer');\nconst onSeller = onState.focus('seller');\n")),(0,c.kt)("p",null,"Here we want an optic to focus on the first line of the buyer's address and an other that does the same for the seller."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"const onLine1 = optic<Person>().focus('contact.address.line1'); // BaseOptic\n\nconst onBuyerLine1 = onBuyer.compose(onLine1);\n\nconst onSellerLine1 = onSeller.compose(onLine1);\n")))}d.isMDXComponent=!0}}]);