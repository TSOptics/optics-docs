"use strict";(self.webpackChunkoptics_docs=self.webpackChunkoptics_docs||[]).push([[685],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},l="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=p(r),d=o,m=l["".concat(c,".").concat(d)]||l[d]||y[d]||s;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[l]="string"==typeof e?e:o,a[1]=i;for(var p=2;p<s;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9325:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>y,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const s={sidebar_position:4,title:"useKeyedOptics()"},a="useKeyedOptics(opticOnArray, keyExtractor): opticFromKey",i={unversionedId:"API/React/useKeyedOptics()",id:"API/React/useKeyedOptics()",title:"useKeyedOptics()",description:"---",source:"@site/docs/API/React/useKeyedOptics().md",sourceDirName:"API/React",slug:"/API/React/useKeyedOptics()",permalink:"/docs/API/React/useKeyedOptics()",draft:!1,editUrl:"https://github.com/TSOptics/optics-docs/edit/master/docs/API/React/useKeyedOptics().md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"useKeyedOptics()"},sidebar:"tutorialSidebar",previous:{title:"useOpticReducer()",permalink:"/docs/API/React/useOpticReducer()"},next:{title:".convert()",permalink:"/docs/API/methods/convert()"}},c={},p=[{value:"Example:",id:"example",level:3},{value:"Motivation",id:"motivation",level:3}],u={toc:p},l="wrapper";function y(e){let{components:t,...r}=e;return(0,o.kt)(l,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"usekeyedopticsopticonarray-keyextractor-opticfromkey"},"useKeyedOptics(opticOnArray, keyExtractor): opticFromKey"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function useKeyedOptics<T>(\n  onArray: Optic<T[]>,\n  keyExtractor: (t: T) => string\n): (key: string) => Optic<T>;\n")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"When you have an optic focused on an array, use this hook to derive a new optic for each index in the array.",(0,o.kt)("br",{parentName:"p"}),"\n","The hook returns a function that gets you the right optic from its key.",(0,o.kt)("br",{parentName:"p"}),"\n","The key serves the same purpose as the ",(0,o.kt)("a",{parentName:"p",href:"https://beta.reactjs.org/learn/rendering-lists#keeping-list-items-in-order-with-key"},"key you pass to jsx elements in lists"),", in fact you should use the same key for both the React element and the function returning the optic !"),(0,o.kt)("h3",{id:"example"},"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const Users = ({ onUsers }: { onUsers: Optic<User[]> }) => {\n    const [users] = useOptic(onUsers);\n\n    const keyExtractor = (user: User) => user.id;\n\n    const opticFromKey = useKeyedOptics(onUsers, keyExtractor);\n\n    return users.map((user) => {\n        const key = keyExtractor(user);\n        return <User key={key} onUser={opticFromKey(key)} />;\n    });\n};\n\nconst User = memo(({ onUser }: { onUser: Optic<User> }) => ...)\n")),(0,o.kt)("h3",{id:"motivation"},"Motivation"),(0,o.kt)("p",null,"Technically to derive a new optic for every element of the array you can simply do the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const optics = useMemo(\n  () => users.map((_, index) => onUsers[index]),\n  [users, onUsers]\n);\n\nreturn users.map((user, index) => <User key={key} onUser={optics[index]} />);\n")),(0,o.kt)("p",null,"However with this approach the optics will all change reference every time ",(0,o.kt)("inlineCode",{parentName:"p"},"users")," changes, even if we just added a single user to it.\nIn turn every ",(0,o.kt)("inlineCode",{parentName:"p"},"User")," element in the list will also rerender bacause their optic changed."),(0,o.kt)("p",null,"With the function returned by ",(0,o.kt)("inlineCode",{parentName:"p"},"useKeyedOptics")," we are guaranteed to always get the same optic for a given key.",(0,o.kt)("br",{parentName:"p"}),"\n","And we get this for free since React already makes us get a key for each element in the list."))}y.isMDXComponent=!0}}]);