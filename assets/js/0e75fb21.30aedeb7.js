"use strict";(self.webpackChunkreact_optics_docs=self.webpackChunkreact_optics_docs||[]).push([[4466],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||l[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5790:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return l}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={title:"Outside of components"},c="Usage outside of components",u={unversionedId:"Guides/outside_components",id:"Guides/outside_components",title:"Outside of components",description:"Every optic has a .getState() and .setState() method to read and update the store without having to call useOptic().",source:"@site/docs/Guides/outside_components.md",sourceDirName:"Guides",slug:"/Guides/outside_components",permalink:"/docs/Guides/outside_components",draft:!1,editUrl:"https://github.com/TSOptics/react-optics-docs/edit/master/docs/Guides/outside_components.md",tags:[],version:"current",frontMatter:{title:"Outside of components"},sidebar:"tutorialSidebar",previous:{title:"Comparison",permalink:"/docs/Guides/comparisons"},next:{title:"Selector",permalink:"/docs/Guides/selector"}},p={},l=[],d={toc:l};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"usage-outside-of-components"},"Usage outside of components"),(0,a.kt)("p",null,"Every optic has a ",(0,a.kt)("a",{parentName:"p",href:"../API/methods/getState()"},(0,a.kt)("inlineCode",{parentName:"a"},".getState()"))," and ",(0,a.kt)("a",{parentName:"p",href:"../API/methods/setState()"},(0,a.kt)("inlineCode",{parentName:"a"},".setState()"))," method to read and update the store without having to call ",(0,a.kt)("inlineCode",{parentName:"p"},"useOptic()"),".",(0,a.kt)("br",{parentName:"p"}),"\n","You can call these methods everywhere in your code and not just in React components or hooks."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},".getState()")," gets you the focused value while ",(0,a.kt)("inlineCode",{parentName:"p"},".setState()")," is the same as the setter function returned by ",(0,a.kt)("inlineCode",{parentName:"p"},"useOptic()"),".",(0,a.kt)("br",{parentName:"p"}),"\n","These methods execute synchronously meaning ",(0,a.kt)("inlineCode",{parentName:"p"},".getState()")," will always return the latest focused value."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const onNumber = createStore(42);\n\nonNumber.getState(); // 42\nonNumber.setState((n) => n * 2);\nonNumber.getState(); // 84\n")))}m.isMDXComponent=!0}}]);